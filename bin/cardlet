#! /usr/bin/env ruby

require 'thor'
require 'cardlet'

module CardletCLI
  class Deck < Thor
    option :name, required: true
    option :directory
    desc 'create', 'Create a new deck'
    def create
      deck = Cardlet::Deck.new(options[:name])
      directory = options[:directory] || "#{Dir.home}/.cardlet/decks"
      Cardlet::Persistence::Deck.write(deck, directory)
    end

    option :name, required: true
    desc 'delete', 'Delete an existing deck'
    def delete
      directory = options[:directory] || "#{Dir.home}/.cardlet/decks"
      Cardlet::Persistence::Deck.delete(options[:name], directory)
    end
  end

  class Card < Thor
    option :name, required: true
    desc 'create', 'Create a new card'
    def create
      puts "Creating a card called #{options[:name]}"
    end

    option :name, required: true
    desc 'delete', 'Delete an existing card'
    def delete
      puts "Deleting a card called #{options[:name]}"
    end
  end

  class TopLevel < Thor
    desc 'card [ create | delete ]', 'Do something with a card'
    subcommand 'card', Card

    desc 'deck [ create | delete ]', 'Do something with a deck'
    subcommand 'deck', Deck
  end
end

CardletCLI::TopLevel.start(ARGV)
